Hi Prof. Fabio,

I am Shakti Rathore from your CS 156 class. This is my neural network project.

I have three files in the project.

NeuralNetwork.java contains all the code necessary for neural network
Matrix_Manipulations.java contains all the matrix manipulations functions such as dotproduct, transpose, etc.
MainClass.java is the main tester class that contains main method.

I have written the entire code for neural network with all the specifications and details when initialing, querying, and 
training the neural network. I followed all the steps as adviced by you in the class and those present in the slides. But 
my code is not working properly. It is because I think I didn't provide correct matrices when doing training part. The input matrix 
for backpropagation in the first layer should be input signals after dotproducting with weight_matrix in input and hidden layer.
I have explained all the points necessary to make this neural network in the form of comments to show what I am doing and what should
be done in that particular step.

As you said it is important to know how ANN works even if our code is not working, here I have explained how this 
neural network should work but in my code I have explained in detail how each step of neural network works. I tried writing extensive 
comments in the code so that each step of neural network is clear.

We need to do three steps in neural network:
Initialization: This will initializing step where we step up number of nodes in each layer, learning rate, setting up 
initial weights. Initial weights matrices, W_input_hidden and W_hidden_output, are initialized by randomly between 
their specific range depending on number of nodes are connected from one layer to another. Here, 784 nodes in the input layer
where each node is connected to 100 nodes in the hidden layer.
 

Training: For training, we start with querying by calling query function. This gives us output for that input. 
		  Then we calculate error by using this output and what target output should be. I implemented an error function for this.
		  Then we do the second part of training, backpropagation. Calculate derivative part
		 calculating this, dE/dw = -(t_k - o_k)*o_k*(1-o_k)*oT_j. We use this formula to calculate gradient of error with weight where
		 e_k is error from output, o_k is output from output layer, o_j is output from hidden layer but transposed before using in this formula.
		 After calculating derivative, we calculate updated weights by : new weight = old weight - (learningrate * derivative value for that weight)

		We do that same for weights between input and hidden layer. Just keeping it short here because code contains extensive comments for
		each step.

Querying: This step reads input from csv file and set up inputs matrix. Then 
			find X_hidden = W_input_hidden * I and then passing this into sigmoid function to get O_hidden. This becomes output of 
			hidden layer and input of output layer. Then we do the same for output layer to get result of the network for this
			query.
			
			

Thank you professor for this class. I learned a lot about AI particularly Neural Network. Please grade my project. Have a nice break.